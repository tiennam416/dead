local Players = game:GetService("Players")
local player = Players.LocalPlayer
player.CameraMode = Enum.CameraMode.Classic
local runService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local TweenService = game:GetService("TweenService")

-- Xóa menu cũ nếu tồn tại
local existingGui = game:GetService("CoreGui"):FindFirstChild("AnhemconCak")
if existingGui then
    existingGui:Destroy()
end

-- Thông báo khởi đầu
StarterGui:SetCore("SendNotification", {
    Title = "AnhemconCak Menu",
    Text = "Created by TienDaiCa",
    Duration = 3
})

-- Tạo ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AnhemconCak"
screenGui.Parent = game:GetService("CoreGui")
screenGui.ResetOnSpawn = false

-- Tạo Frame chính cho menu
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 250, 0, 350)
mainFrame.Position = UDim2.new(0.5, -125, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Visible = false

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 10)
frameCorner.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "AnhemConCak Menu"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Parent = mainFrame

-- Tạo Tab Frame
local tabFrame = Instance.new("Frame")
tabFrame.Size = UDim2.new(1, 0, 0, 40)
tabFrame.Position = UDim2.new(0, 0, 0, 40)
tabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabFrame.BorderSizePixel = 0
tabFrame.Parent = mainFrame

local function createTabButton(name, position, text)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0.33, 0, 1, 0) -- Chia đều cho 3 tab
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(70, 50, 90)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.Gotham
    button.TextSize = 16
    button.Parent = tabFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    return button
end

local tab1Button = createTabButton("Tab1", UDim2.new(0, 0, 0, 0), "Main")
local tab2Button = createTabButton("Tab2", UDim2.new(0.33, 0, 0, 0), "Auto")
local tab3Button = createTabButton("Tab3", UDim2.new(0.66, 0, 0, 0), "TP")

-- Tạo Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 0, 270)
contentFrame.Position = UDim2.new(0, 0, 0, 80)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local tab1Content = Instance.new("Frame")
tab1Content.Size = UDim2.new(1, 0, 1, 0)
tab1Content.BackgroundTransparency = 1
tab1Content.Parent = contentFrame
tab1Content.Visible = true

local tab2Content = Instance.new("Frame")
tab2Content.Size = UDim2.new(1, 0, 1, 0)
tab2Content.BackgroundTransparency = 1
tab2Content.Parent = contentFrame
tab2Content.Visible = false

local tab3Content = Instance.new("Frame")
tab3Content.Size = UDim2.new(1, 0, 1, 0)
tab3Content.BackgroundTransparency = 1
tab3Content.Parent = contentFrame
tab3Content.Visible = false

-- Hàm tạo nút
local function createButton(name, position, text, parent)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0, 200, 0, 40)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Font = Enum.Font.Gotham
    button.TextSize = 16
    button.Parent = parent
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    return button
end

-- Tab 1: Utilities
local npcButton = createButton("NPCLock", UDim2.new(0.5, -100, 0, 20), "NPC Lock: OFF (N)", tab1Content)
local noclipButton = createButton("NoClip", UDim2.new(0.5, -100, 0, 70), "NoClip: OFF (C)", tab1Content)
local nightVisionButton = createButton("NightVision", UDim2.new(0.5, -100, 0, 120), "Nhìn Trong Đêm: OFF (V)", tab1Content)
local espButton = createButton("ESP", UDim2.new(0.5, -100, 0, 170), "ESP: OFF (E)", tab1Content)

-- Tab 2: Auto
local collectMoneyButton = createButton("CollectMoney", UDim2.new(0.5, -100, 0, 20), "Thu Túi Tiền: OFF (M)", tab2Content)
local bandagePickupButton = createButton("AutoBandagePickup", UDim2.new(0.5, -100, 0, 70), "Nhặt Băng: OFF (B)", tab2Content)
local bandageUseButton = createButton("AutoBandageUse", UDim2.new(0.5, -100, 0, 120), "Dùng Băng: OFF (U)", tab2Content)

-- Tab 3: Teleport
local tpToTrainButton = createButton("TPToTrain", UDim2.new(0.5, -100, 0, 20), "TP To Train (Y)", tab3Content)

local VehicleFlyButton = createButton("VehicleFly", UDim2.new(0.5, -100, 0, 70), "VehicleFly", tab3Content)

-- Thanh chỉnh máu
local healthSliderFrame = Instance.new("Frame")
healthSliderFrame.Size = UDim2.new(0, 200, 0, 30)
healthSliderFrame.Position = UDim2.new(0.5, -100, 0, 170)
healthSliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
healthSliderFrame.Parent = tab2Content

local sliderCorner = Instance.new("UICorner")
sliderCorner.CornerRadius = UDim.new(0, 8)
sliderCorner.Parent = healthSliderFrame

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(0.9, 0, 0.3, 0)
sliderBar.Position = UDim2.new(0.05, 0, 0.35, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
sliderBar.Parent = healthSliderFrame

local sliderKnob = Instance.new("Frame")
sliderKnob.Size = UDim2.new(0.05, 0, 1, 0)
sliderKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderKnob.Parent = sliderBar

local sliderLabel = Instance.new("TextLabel")
sliderLabel.Size = UDim2.new(0, 50, 0, 20)
sliderLabel.Position = UDim2.new(0.5, -25, 0, -20)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Text = "Health: 50"
sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
sliderLabel.Font = Enum.Font.Gotham
sliderLabel.TextSize = 14
sliderLabel.Parent = healthSliderFrame

-- Logic thanh chỉnh máu
local minHealth = 10
local maxHealth = 100
local healthThreshold = 50
local isDragging = false

local function updateSlider(positionX)
    local sliderWidth = sliderBar.AbsoluteSize.X
    local knobPos = math.clamp(positionX - sliderBar.AbsolutePosition.X, 0, sliderWidth)
    sliderKnob.Position = UDim2.new(0, knobPos, 0, 0)
    healthThreshold = math.floor(minHealth + (maxHealth - minHealth) * (knobPos / sliderWidth))
    sliderLabel.Text = "Health: " .. healthThreshold
end

sliderBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        updateSlider(input.Position.X)
    end
end)

sliderBar.InputChanged:Connect(function(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateSlider(input.Position.X)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = false
    end
end)

-- Hàm kéo thả Frame
local function makeDraggable(frame)
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input == dragInput then
            update(input)
        end
    end)
end

makeDraggable(mainFrame)

-- Chuyển đổi tab
local function switchTab(tabToShow)
    tab1Content.Visible = (tabToShow == tab1Content)
    tab2Content.Visible = (tabToShow == tab2Content)
    tab3Content.Visible = (tabToShow == tab3Content)
    tab1Button.BackgroundColor3 = (tabToShow == tab1Content) and Color3.fromRGB(90, 70, 110) or Color3.fromRGB(70, 50, 90)
    tab2Button.BackgroundColor3 = (tabToShow == tab2Content) and Color3.fromRGB(90, 70, 110) or Color3.fromRGB(70, 50, 90)
    tab3Button.BackgroundColor3 = (tabToShow == tab3Content) and Color3.fromRGB(90, 70, 110) or Color3.fromRGB(70, 50, 90)
end

tab1Button.MouseButton1Click:Connect(function() switchTab(tab1Content) end)
tab2Button.MouseButton1Click:Connect(function() switchTab(tab2Content) end)
tab3Button.MouseButton1Click:Connect(function() switchTab(tab3Content) end)

-- Logic NPC Lock
local npcLock = false
local toggleLoop

local function getClosestNPC()
    local closestNPC = nil
    local closestDistance = math.huge
    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA("Model") then
            local humanoid = object:FindFirstChild("Humanoid")
            local hrp = object:FindFirstChild("HumanoidRootPart") or object.PrimaryPart
            if humanoid and hrp and humanoid.Health > 0 and object.Name ~= "Model_Horse" and object.Name ~= "Woft" and object.Name ~= "Wolf" then
                local isPlayer = Players:GetPlayerFromCharacter(object) ~= nil
                if not isPlayer then
                    local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestNPC = object
                    end
                end
            end
        end
    end
    return closestNPC
end

local function toggleNPCLock(state)
    npcLock = state
    npcButton.Text = npcLock and "NPC Lock: ON (N)" or "NPC Lock: OFF (N)"
    if npcLock then
        if not toggleLoop then
            toggleLoop = runService.RenderStepped:Connect(function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
                local npc = getClosestNPC()
                if npc and npc:FindFirstChild("Humanoid") then
                    local npcHumanoid = npc:FindFirstChild("Humanoid")
                    if npcHumanoid.Health > 0 then
                        camera.CameraSubject = npcHumanoid
                    else
                        if player.Character and player.Character:FindFirstChild("Humanoid") then
                            camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                        end
                    end
                else
                    if player.Character and player.Character:FindFirstChild("Humanoid") then
                        camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                    end
                end
            end)
        end
    else
        if toggleLoop then
            toggleLoop:Disconnect()
            toggleLoop = nil
        end
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
        end
    end
end

npcButton.MouseButton1Click:Connect(function() toggleNPCLock(not npcLock) end)

-- Logic NoClip
local noclip = false
local noclipConnection
local lastSafePosition

local function toggleNoClip(state)
    noclip = state
    noclipButton.Text = noclip and "NoClip: ON (C)" or "NoClip: OFF (C)"
    if noclip then
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            lastSafePosition = player.Character.HumanoidRootPart.CFrame
        end
        if not noclipConnection then
            noclipConnection = runService.Stepped:Connect(function()
                if player.Character then
                    local hrp = player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        if hrp.Position.Y < 2.5 then
                            if lastSafePosition then
                                local targetPosition = Vector3.new(lastSafePosition.X, 2.5, lastSafePosition.Z)
                                local distance = (targetPosition - hrp.Position).Magnitude
                                local tweenTime = distance * 0.5
                                local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)
                                local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(targetPosition)})
                                tween:Play()
                                tween.Completed:Wait()
                                toggleNoClip(false)
                            end
                            return
                        end
                        if hrp.Position.Y >= 2.5 then
                            lastSafePosition = hrp.CFrame
                        end
                        for _, part in ipairs(player.Character:GetChildren()) do
                            if part:IsA("BasePart") then
                                part.CanCollide = false
                            end
                        end
                    end
                end
            end)
        end
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
    end
end

noclipButton.MouseButton1Click:Connect(function() toggleNoClip(not noclip) end)

-- Logic Nhìn Trong Đêm
local nightVisionEnabled = false
local defaultLighting = {}
local nightVisionLoop

local function saveDefaultLighting()
    defaultLighting.Ambient = Lighting.Ambient or Color3.fromRGB(0, 0, 0)
    defaultLighting.Brightness = Lighting.Brightness or 1
    defaultLighting.GlobalShadows = Lighting.GlobalShadows or true
    defaultLighting.ClockTime = Lighting.ClockTime or 14
    defaultLighting.TimeOfDay = Lighting.TimeOfDay or "14:00:00"
    defaultLighting.FogEnd = Lighting.FogEnd or 100
    defaultLighting.FogColor = Lighting.FogColor or Color3.fromRGB(192, 192, 192)
end

local function applyNightVision()
    nightVisionEnabled = true
    nightVisionButton.Text = "Nhìn Trong Đêm: ON (V)"
    if not nightVisionLoop then
        nightVisionLoop = runService.RenderStepped:Connect(function()
            if nightVisionEnabled then
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
                Lighting.Brightness = 1
                Lighting.GlobalShadows = false
                Lighting.ClockTime = 12
                Lighting.TimeOfDay = "12:00:00"
                Lighting.FogEnd = 100000
                Lighting.FogColor = Color3.fromRGB(255, 255, 255)
            end
        end)
    end
end

local function disableNightVision()
    nightVisionEnabled = false
    nightVisionButton.Text = "Nhìn Trong Đêm: OFF (V)"
    if nightVisionLoop then
        nightVisionLoop:Disconnect()
        nightVisionLoop = nil
    end
    Lighting.Ambient = defaultLighting.Ambient
    Lighting.Brightness = defaultLighting.Brightness
    Lighting.GlobalShadows = defaultLighting.GlobalShadows
    Lighting.ClockTime = defaultLighting.ClockTime
    Lighting.TimeOfDay = defaultLighting.TimeOfDay
    Lighting.FogEnd = defaultLighting.FogEnd
    Lighting.FogColor = defaultLighting.FogColor
end

saveDefaultLighting()

nightVisionButton.MouseButton1Click:Connect(function()
    if nightVisionEnabled then disableNightVision() else applyNightVision() end
end)

-- Logic ESP
local espEnabled = false
local espConnection

local function createESP(model)
    if not espEnabled then return end
    local humanoid = model:FindFirstChild("Humanoid")
    local head = model:FindFirstChild("Head")
    if not humanoid or not head then return end

    if head:FindFirstChild("ESP") then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP"
    billboard.Parent = head
    billboard.Adornee = head
    billboard.Size = UDim2.new(0, 100, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true

    local textLabel = Instance.new("TextLabel")
    textLabel.Parent = billboard
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
    textLabel.TextScaled = false
    textLabel.TextSize = 16
    textLabel.Font = Enum.Font.SourceSans

    local function updateESP()
        if humanoid and humanoid.Parent and espEnabled then
            textLabel.Text = model.Name .. "\nHP: " .. math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
        else
            billboard:Destroy()
        end
    end

    humanoid.HealthChanged:Connect(updateESP)
    updateESP()
end

local function applyESPToModel(model)
    if espEnabled and model:IsA("Model") then
        local humanoid = model:FindFirstChild("Humanoid")
        if humanoid and Players:GetPlayerFromCharacter(model) == nil then
            createESP(model)
        end
    end
end

local function toggleESP(state)
    espEnabled = state
    espButton.Text = espEnabled and "ESP: ON (E)" or "ESP: OFF (E)"
    if espEnabled then
        for _, model in pairs(workspace:GetDescendants()) do
            applyESPToModel(model)
        end
        if not espConnection then
            espConnection = workspace.DescendantAdded:Connect(applyESPToModel)
        end
    else
        for _, head in pairs(workspace:GetDescendants()) do
            if head:IsA("BasePart") then
                local esp = head:FindFirstChild("ESP")
                if esp then esp:Destroy() end
            end
        end
        if espConnection then
            espConnection:Disconnect()
            espConnection = nil
        end
    end
end

espButton.MouseButton1Click:Connect(function() toggleESP(not espEnabled) end)

-- Logic Thu Túi Tiền
local moneyCollectionEnabled = false
local moneyCollectionLoop

local function toggleMoneyCollection(state)
    moneyCollectionEnabled = state
    collectMoneyButton.Text = moneyCollectionEnabled and "Thu Túi Tiền: ON (M)" or "Thu Túi Tiền: OFF (M)"
    if moneyCollectionEnabled then
        if not moneyCollectionLoop then
            moneyCollectionLoop = runService.Heartbeat:Connect(function()
                local moneyBagContainer = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild("Moneybag")
                if not moneyBagContainer then return end
                local moneyBags = moneyBagContainer:GetChildren()
                for _, moneyBag in ipairs(moneyBags) do
                    if moneyBag.Name == "MoneyBag" then
                        local prompt = moneyBag:FindFirstChild("CollectPrompt")
                        if prompt and prompt:IsA("ProximityPrompt") then
                            fireproximityprompt(prompt)
                        end
                    end
                end
            end)
        end
    else
        if moneyCollectionLoop then
            moneyCollectionLoop:Disconnect()
            moneyCollectionLoop = nil
        end
    end
end

collectMoneyButton.MouseButton1Click:Connect(function() toggleMoneyCollection(not moneyCollectionEnabled) end)

-- Logic Nhặt Băng
local bandagePickupEnabled = false
local bandagePickupLoop

local function toggleBandagePickup(state)
    bandagePickupEnabled = state
    bandagePickupButton.Text = bandagePickupEnabled and "Nhặt Băng: ON (B)" or "Nhặt Băng: OFF (B)"
    if bandagePickupEnabled then
        if not bandagePickupLoop then
            bandagePickupLoop = runService.Heartbeat:Connect(function()
                local bandage = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild("Bandage")
                if bandage then
                    local args = { [1] = bandage }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Tool"):WaitForChild("PickUpTool"):FireServer(unpack(args))
                end
            end)
        end
    else
        if bandagePickupLoop then
            bandagePickupLoop:Disconnect()
            bandagePickupLoop = nil
        end
    end
end

bandagePickupButton.MouseButton1Click:Connect(function() toggleBandagePickup(not bandagePickupEnabled) end)

-- Logic Dùng Băng Tự Động
local bandageUseEnabled = false
local bandageUseLoop

local function useBandage()
    local bandage = player.Backpack:FindFirstChild("Bandage")
    if bandage and bandage:FindFirstChild("Use") then
        bandage.Use:FireServer()
    end
end

local function toggleBandageUse(state)
    bandageUseEnabled = state
    bandageUseButton.Text = bandageUseEnabled and "Dùng Băng: ON (U)" or "Dùng Băng: OFF (U)"
    if bandageUseEnabled then
        if not bandageUseLoop then
            bandageUseLoop = runService.Heartbeat:Connect(function()
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    local humanoid = player.Character.Humanoid
                    if humanoid.Health < healthThreshold then
                        useBandage()
                    end
                end
            end)
        end
    else
        if bandageUseLoop then
            bandageUseLoop:Disconnect()
            bandageUseLoop = nil
        end
    end
end

bandageUseButton.MouseButton1Click:Connect(function() toggleBandageUse(not bandageUseEnabled) end)

-- Logic TP To Train
local function teleportToTrain()
    local seat = workspace:FindFirstChild("Train") and workspace.Train:FindFirstChild("TrainControls") and workspace.Train.TrainControls:FindFirstChild("ConductorSeat") and workspace.Train.TrainControls.ConductorSeat:FindFirstChild("VehicleSeat")
    if seat then
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(seat.Position)
            StarterGui:SetCore("SendNotification", {
                Title = "TP To Train",
                Text = "Teleported to train!",
                Duration = 2
            })
        else
            warn("Character or HumanoidRootPart not found!")
            StarterGui:SetCore("SendNotification", {
                Title = "TP To Train",
                Text = "Character not found!",
                Duration = 2
            })
        end
    else
        warn("Train seat not found!")
        StarterGui:SetCore("SendNotification", {
            Title = "TP To Train",
            Text = "Train seat not found!",
            Duration = 2
        })
    end
end

tpToTrainButton.MouseButton1Click:Connect(function()
    teleportToTrain()
end)

--VehicleFly
local function VFly()
loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Vehicle%20Fly%20Gui'))()
end

VehicleFlyButton.MouseButton1Click:Connect(function()
    VFly()
end)
-- Phím tắt
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    local key = input.KeyCode
    if key == Enum.KeyCode.N then
        toggleNPCLock(not npcLock)
    elseif key == Enum.KeyCode.C then
        toggleNoClip(not noclip)
    elseif key == Enum.KeyCode.V then
        if nightVisionEnabled then disableNightVision() else applyNightVision() end
    elseif key == Enum.KeyCode.E then
        toggleESP(not espEnabled)
    elseif key == Enum.KeyCode.M then
        toggleMoneyCollection(not moneyCollectionEnabled)
    elseif key == Enum.KeyCode.B then
        toggleBandagePickup(not bandagePickupEnabled)
    elseif key == Enum.KeyCode.U then
        toggleBandageUse(not bandageUseEnabled)
    elseif key == Enum.KeyCode.Y then
        teleportToTrain()
    end
end)

-- Nút mở/đóng menu
local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 50, 0, 50)
openButton.Position = UDim2.new(0.5, -25, 0.5, -25)
openButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
openButton.TextColor3 = Color3.fromRGB(255, 255, 255)
openButton.Text = "Open"
openButton.Parent = screenGui

local openCorner = Instance.new("UICorner")
openCorner.CornerRadius = UDim.new(0, 8)
openCorner.Parent = openButton

makeDraggable(openButton)

openButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = not mainFrame.Visible
    openButton.Text = mainFrame.Visible and "Close" or "Open"
end)
